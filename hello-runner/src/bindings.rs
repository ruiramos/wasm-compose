// Generated by `wit-bindgen` 0.16.0. DO NOT EDIT!
pub mod component {
  pub mod hello_wasm {
    
    #[allow(clippy::all)]
    pub mod hello {
      #[used]
      #[doc(hidden)]
      #[cfg(target_arch = "wasm32")]
      static __FORCE_SECTION_REF: fn() = super::super::super::__link_section;
      #[allow(unused_unsafe, clippy::all)]
      pub fn hello_world() -> wit_bindgen::rt::string::String{
        
        #[allow(unused_imports)]
        use wit_bindgen::rt::{alloc, vec::Vec, string::String};
        unsafe {
          
          #[repr(align(4))]
          struct RetArea([u8; 8]);
          let mut ret_area = ::core::mem::MaybeUninit::<RetArea>::uninit();
          let ptr0 = ret_area.as_mut_ptr() as i32;
          #[cfg(target_arch = "wasm32")]
          #[link(wasm_import_module = "component:hello-wasm/hello@0.0.1")]
          extern "C" {
            #[link_name = "hello-world"]
            fn wit_import(_: i32, );
          }
          
          #[cfg(not(target_arch = "wasm32"))]
          fn wit_import(_: i32, ){ unreachable!() }
          wit_import(ptr0);
          let l1 = *((ptr0 + 0) as *const i32);
          let l2 = *((ptr0 + 4) as *const i32);
          let len3 = l2 as usize;
          let bytes3 = Vec::from_raw_parts(l1 as *mut _, len3, len3);
          wit_bindgen::rt::string_lift(bytes3)
        }
      }
      
    }
    
  }
}

#[cfg(target_arch = "wasm32")]
#[link_section = "component-type:runner"]
#[doc(hidden)]
pub static __WIT_BINDGEN_COMPONENT_TYPE: [u8; 432] = [3, 0, 6, 114, 117, 110, 110, 101, 114, 0, 97, 115, 109, 13, 0, 1, 0, 7, 64, 1, 65, 2, 1, 66, 2, 1, 64, 0, 0, 115, 4, 0, 11, 104, 101, 108, 108, 111, 45, 119, 111, 114, 108, 100, 1, 0, 4, 1, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 58, 104, 101, 108, 108, 111, 45, 119, 97, 115, 109, 47, 104, 101, 108, 108, 111, 64, 48, 46, 48, 46, 49, 5, 0, 11, 11, 1, 0, 5, 104, 101, 108, 108, 111, 3, 0, 0, 7, 107, 1, 65, 2, 1, 65, 2, 1, 66, 2, 1, 64, 0, 0, 115, 4, 0, 11, 104, 101, 108, 108, 111, 45, 119, 111, 114, 108, 100, 1, 0, 4, 1, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 58, 104, 101, 108, 108, 111, 45, 119, 97, 115, 109, 47, 104, 101, 108, 108, 111, 64, 48, 46, 48, 46, 49, 5, 0, 4, 1, 35, 99, 111, 109, 112, 111, 110, 101, 110, 116, 58, 104, 101, 108, 108, 111, 45, 119, 97, 115, 109, 47, 112, 114, 111, 118, 105, 100, 101, 114, 64, 48, 46, 48, 46, 49, 4, 0, 11, 14, 1, 0, 8, 112, 114, 111, 118, 105, 100, 101, 114, 3, 2, 0, 7, 105, 1, 65, 2, 1, 65, 2, 1, 66, 2, 1, 64, 0, 0, 115, 4, 0, 11, 104, 101, 108, 108, 111, 45, 119, 111, 114, 108, 100, 1, 0, 3, 1, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 58, 104, 101, 108, 108, 111, 45, 119, 97, 115, 109, 47, 104, 101, 108, 108, 111, 64, 48, 46, 48, 46, 49, 5, 0, 4, 1, 33, 99, 111, 109, 112, 111, 110, 101, 110, 116, 58, 104, 101, 108, 108, 111, 45, 119, 97, 115, 109, 47, 114, 117, 110, 110, 101, 114, 64, 48, 46, 48, 46, 49, 4, 0, 11, 12, 1, 0, 6, 114, 117, 110, 110, 101, 114, 3, 4, 0, 0, 16, 12, 112, 97, 99, 107, 97, 103, 101, 45, 100, 111, 99, 115, 0, 123, 125, 0, 70, 9, 112, 114, 111, 100, 117, 99, 101, 114, 115, 1, 12, 112, 114, 111, 99, 101, 115, 115, 101, 100, 45, 98, 121, 2, 13, 119, 105, 116, 45, 99, 111, 109, 112, 111, 110, 101, 110, 116, 6, 48, 46, 49, 56, 46, 50, 16, 119, 105, 116, 45, 98, 105, 110, 100, 103, 101, 110, 45, 114, 117, 115, 116, 6, 48, 46, 49, 54, 46, 48];

#[inline(never)]
#[doc(hidden)]
#[cfg(target_arch = "wasm32")]
pub fn __link_section() {}
